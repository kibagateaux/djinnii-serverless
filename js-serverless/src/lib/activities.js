Object.defineProperty(exports,"__esModule",{value:true});var _this=this;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step("next",value);},function(err){step("throw",err);});}}return step("next");});};}var updateDatabaseActivities=exports.updateDatabaseActivities=function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee2(userId,activities){var activitiesList,userActivities;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:activitiesList=Array.isArray(activities)?activities:Object.keys(activities).map(function(key){return activities[key];});userActivities=activitiesList.map(function(act){return _extends({},act,{userId:userId,startTime:act.startTime});});activityBlobs=userActivities.reduce(function(blob,next){var lastBlob=blob[blob.length-1];var filledBlobs=[].concat(_toConsumableArray(blob)).slice(0,blob.length-1);return lastBlob.length<25?[].concat(_toConsumableArray(filledBlobs),[[].concat(_toConsumableArray(lastBlob),[next])]):[].concat(_toConsumableArray(blob),[[next]]);},[[]]);console.log('upd db acts',userActivities,activityBlobs);return _context2.abrupt('return',new Promise(function(resolve,reject){return resolve(activityBlobs.map(function(){var _ref2=_asyncToGenerator(regeneratorRuntime.mark(function _callee(acts){return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return post(DYNAMO_TABLES.activities,acts);case 2:return _context.abrupt('return',_context.sent);case 3:case'end':return _context.stop();}}},_callee,_this);}));return function(_x3){return _ref2.apply(this,arguments);};}()));}));case 5:case'end':return _context2.stop();}}},_callee2,_this);}));return function updateDatabaseActivities(_x,_x2){return _ref.apply(this,arguments);};}();